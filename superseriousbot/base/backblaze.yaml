apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
data:
  backup.sh: |
    #!/bin/bash

    # Install SQLite
    apt-get update
    apt-get install -y sqlite3

    # Set the path to your SQLite database file
    DB_FILE=/data/SuperSeriousBot.db

    # Set the Backblaze B2 bucket name and backup file name
    B2_BUCKET=laapata
    BACKUP_FILE=superseriousbot-$(date +%Y%m%d-%H%M%S).db

    # Backup the SQLite database
    sqlite3 $DB_FILE ".backup $BACKUP_FILE"

    # Upload the backup file to Backblaze B2
    b2 file upload $B2_BUCKET $BACKUP_FILE $BACKUP_FILE
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: superseriousbot-backup
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: backup
              image: backblazeit/b2:latest
              command: ["/bin/sh", "-c"]
              args:
                - |
                  b2 account authorize $B2_APPLICATION_KEY_ID $B2_APPLICATION_KEY
                  /app/backup.sh
              env:
                - name: B2_APPLICATION_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: superseriousbot-credentials
                      key: BACKBLAZE_APPLICATION_KEY_ID
                - name: B2_APPLICATION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: superseriousbot-credentials
                      key: BACKBLAZE_APPLICATION_KEY
              volumeMounts:
                - name: database
                  mountPath: /data
                - name: backup-script
                  mountPath: /app/backup.sh
                  subPath: backup.sh
          volumes:
            - name: database
              persistentVolumeClaim:
                claimName: ssgbot-db
            - name: backup-script
              configMap:
                name: backup-script
                defaultMode: 0755
          restartPolicy: OnFailure
