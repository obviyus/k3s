apiVersion: v1
kind: ConfigMap
metadata:
  name: restic-config
data:
  # > Due to issues with error handling in the current B2 library that restic uses, the recommended way to utilize Backblaze B2 is by using its S3-compatible API.
  # https://restic.readthedocs.io/en/stable/030_preparing_a_new_repo.html#backblaze-b2
  RESTIC_REPOSITORY: s3:s3.eu-central-003.backblazeb2.com/laapata/superseriousbot-backup
  AWS_DEFAULT_REGION: eu-central-003
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: superseriousbot-backup
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: backup
              image: ghcr.io/obviyus/restic-db-docker:latest
              command: ["/bin/sh", "-c"]
              args:
                - |
                  restic snapshots || restic init

                  sqlite3 /data/SuperSeriousBot.db ".backup /tmp/backup.db"
                  restic backup /tmp/backup.db
                  rm /tmp/backup.db

                  restic forget --keep-daily 7 --keep-weekly 4 --keep-monthly 6
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: superseriousbot-credentials
                      key: BACKBLAZE_APPLICATION_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: superseriousbot-credentials
                      key: BACKBLAZE_APPLICATION_KEY
                - name: RESTIC_REPOSITORY
                  valueFrom:
                    configMapKeyRef:
                      name: restic-config
                      key: RESTIC_REPOSITORY
                - name: AWS_DEFAULT_REGION
                  valueFrom:
                    configMapKeyRef:
                      name: restic-config
                      key: AWS_DEFAULT_REGION
                - name: RESTIC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: superseriousbot-credentials
                      key: TELEGRAM_TOKEN
              volumeMounts:
                - name: database
                  mountPath: /data
          volumes:
            - name: database
              persistentVolumeClaim:
                claimName: ssgbot-db
          restartPolicy: OnFailure